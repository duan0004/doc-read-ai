version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: doc-read-postgres
    environment:
      POSTGRES_DB: doc_read_ai
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secure_password_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - doc-read-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: doc-read-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - doc-read-network

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: doc-read-backend
    environment:
      NODE_ENV: production
      PORT: 8000
      DATABASE_URL: postgresql://postgres:secure_password_2024@postgres:5432/doc_read_ai
      REDIS_URL: redis://redis:6379
      CORS_ORIGIN: https://doc-read-ai.onrender.com
      DEEPSEEK_API_KEY: sk-9d268b2ffcc64b68a62e81b4eb31f18f
      JWT_SECRET: production_jwt_secret_change_me_2024
    ports:
      - "8000:8000"
    volumes:
      - ./backend/uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - doc-read-network

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: doc-read-frontend
    environment:
      NEXT_PUBLIC_API_URL: https://doc-read-ai-backend.onrender.com/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - doc-read-network

volumes:
  postgres_data:
  redis_data:

networks:
  doc-read-network:
    driver: bridge